{"ast":null,"code":"var _jsxFileName = \"/home/jota/upgradehub/MERN/app-front-react/src/componentes/crearUsuario.js\";\nimport React, { Component } from 'react';\n/* como hemos importado el componente directamente, no hace falta poner abajo React.Component\n */\n\nclass CrearUsuario extends Component {\n  //this.props es un objetos con datos públicos de React\n  //this.state objeto con datos privados de React, es decir,\n  //el estado interno del componente\n  //las variables miembro de la clase privadas\n  constructor(props) {\n    super(props); //invocamos al constructor del padre pasándole las propiedades públicas\n    //para evitar el problema del this con javascript:\n\n    this.onChangeNombre = this.onChangeNombre.bind(this); //bind vincula algo k en el futuro será this\n    //es decir, k en el futuro cuando se invoque al método, this sea realmente this\n    //this es el objeto instanciado basado en la clase, en estado, cada uno de los componentes\n\n    this.onChangeEmail = this.onChangeNombre.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      //creamos un objeto vacío \n      nombre: 'juan desde react',\n      email: 'aaa@aaa.com',\n      password: '1234'\n    };\n  } //Metodo invocado x react cada vez k se cambia el valor del input y se envía un objeto\n  //con la informacion del evento\n\n\n  onChangeNombre(evt) {\n    this.setState({\n      nombre: evt.target.value\n    });\n  }\n\n  onChangeEmail(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  onChangePassword(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault(); //aki invocariamos al servicio cliente http, Ajax, fetch...\n\n    console.log(`Datos: ${this.state.nombre} , ${this.state.email} , ${this.state.password}`);\n    window.fetch('http://127.0.0.1:4000/api/usuarios/registro', {\n      method: 'post',\n      body: JSON.stringify({\n        \"nombre\": this.state.nombre,\n        \"email\": this.state.email,\n        \"password\": this.state.password\n      })\n    });\n  }\n\n  render() {\n    return (\n      /* como en react no hay ngmodel para captar los datos\n      lo vinculamos directamente con el objero this.state.email --> */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Formulario crear usuario\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Nombre:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Francisco\",\n        onChange: this.onChangeNombre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"ejemplo@email.com\",\n        onChange: this.onChangeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"password:\"), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"C@ntRaSe\\xF1*a\",\n        onChange: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"enviar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default CrearUsuario;","map":{"version":3,"sources":["/home/jota/upgradehub/MERN/app-front-react/src/componentes/crearUsuario.js"],"names":["React","Component","CrearUsuario","constructor","props","onChangeNombre","bind","onChangeEmail","onChangePassword","onSubmit","state","nombre","email","password","evt","setState","target","value","preventDefault","console","log","window","fetch","method","body","JSON","stringify","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAoC;AAChC;AACA;AACA;AACA;AAEAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CACE;AAEhB;;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB,CAJc,CAIwC;AACF;AACA;;AACpD,SAAKC,aAAL,GAAqB,KAAKF,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAArB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,QAAL,GAAiB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAjB;AAEA,SAAKI,KAAL,GAAa;AAAO;AACjBC,MAAAA,MAAM,EAAC,kBADG;AAETC,MAAAA,KAAK,EAAC,aAFG;AAGTC,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAKH,GAtB+B,CAuBhC;AACA;;;AACAR,EAAAA,cAAc,CAACS,GAAD,EAAK;AACf,SAAKC,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAACG,GAAG,CAACE,MAAJ,CAAWC;AAAnB,KAAd;AAEH;;AACDV,EAAAA,aAAa,CAACO,GAAD,EAAK;AACd,SAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAACE,GAAG,CAACE,MAAJ,CAAWC;AAAlB,KAAd;AAEH;;AACDT,EAAAA,gBAAgB,CAACM,GAAD,EAAK;AACjB,SAAKC,QAAL,CAAc;AAACF,MAAAA,QAAQ,EAACC,GAAG,CAACE,MAAJ,CAAWC;AAArB,KAAd;AAEH;;AACDR,EAAAA,QAAQ,CAACK,GAAD,EAAK;AACTA,IAAAA,GAAG,CAACI,cAAJ,GADS,CAET;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAAS,KAAKV,KAAL,CAAWC,MAAO,MAAK,KAAKD,KAAL,CAAWE,KAAM,MAAK,KAAKF,KAAL,CAAWG,QAAS,EAAvF;AACAQ,IAAAA,MAAM,CAACC,KAAP,CAAa,6CAAb,EAA4D;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAU,KAAKhB,KAAL,CAAWC,MADJ;AAEjB,iBAAS,KAAKD,KAAL,CAAWE,KAFH;AAGjB,oBAAW,KAAKF,KAAL,CAAWG;AAHL,OAAf;AAFkD,KAA5D;AAQH;;AAEDc,EAAAA,MAAM,GAAE;AACJ;AAAS;;AAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI;AAAM,QAAA,QAAQ,EAAE,KAAKlB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADR,EAEQ;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,WAAW,EAAC,WADZ;AAGA,QAAA,QAAQ,EAAI,KAAKJ,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,CADA,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,WAAW,EAAC,mBADZ;AAGA,QAAA,QAAQ,EAAI,KAAKE,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACA,QAAA,WAAW,EAAC,gBADZ;AAGA,QAAA,QAAQ,EAAE,KAAKC,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAfJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAtBJ,CAFJ;AAFJ;AAgCH;;AApF+B;;AAwFpC,eAAeN,YAAf","sourcesContent":["import React, { Component } from 'react';\n\n/* como hemos importado el componente directamente, no hace falta poner abajo React.Component\n */\nclass CrearUsuario extends Component{\n    //this.props es un objetos con datos públicos de React\n    //this.state objeto con datos privados de React, es decir,\n    //el estado interno del componente\n    //las variables miembro de la clase privadas\n\n    constructor(props){\n        super(props);   //invocamos al constructor del padre pasándole las propiedades públicas\n\n        //para evitar el problema del this con javascript:\n        this.onChangeNombre = this.onChangeNombre.bind(this); //bind vincula algo k en el futuro será this\n                                                            //es decir, k en el futuro cuando se invoque al método, this sea realmente this\n                                                            //this es el objeto instanciado basado en la clase, en estado, cada uno de los componentes\n        this.onChangeEmail = this.onChangeNombre.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit  = this.onSubmit.bind(this);\n\n        this.state = {      //creamos un objeto vacío \n           nombre:'juan desde react',\n            email:'aaa@aaa.com',\n            password:'1234'\n        }\n    }\n    //Metodo invocado x react cada vez k se cambia el valor del input y se envía un objeto\n    //con la informacion del evento\n    onChangeNombre(evt){\n        this.setState({nombre:evt.target.value\n        });\n    }\n    onChangeEmail(evt){\n        this.setState({email:evt.target.value\n        });\n    }\n    onChangePassword(evt){\n        this.setState({password:evt.target.value\n        });\n    }\n    onSubmit(evt){\n        evt.preventDefault();\n        //aki invocariamos al servicio cliente http, Ajax, fetch...\n        console.log(`Datos: ${this.state.nombre} , ${this.state.email} , ${this.state.password}`);\n        window.fetch('http://127.0.0.1:4000/api/usuarios/registro', {\n            method: 'post',\n            body: JSON.stringify({\n                \"nombre\": this.state.nombre,\n                \"email\": this.state.email,\n                \"password\":this.state.password\n            })\n        });\n    }\n  \n    render(){\n        return ( /* como en react no hay ngmodel para captar los datos\n            lo vinculamos directamente con el objero this.state.email --> */\n            <div>\n                <h2>Formulario crear usuario</h2>\n                <form onSubmit={this.onSubmit}>\n                <div>\n                        <label>Nombre:</label>\n                        <input type=\"text\" \n                        placeholder=\"Francisco\"\n\n                        onChange = {this.onChangeNombre}></input> \n                    </div>\n                    <div>\n                        <label>Email:</label>\n                        <input type=\"text\" \n                        placeholder=\"ejemplo@email.com\"\n\n                        onChange = {this.onChangeEmail}></input> \n                    </div>\n                    <div>\n                    <label>password:</label>\n                        <input type=\"password\" \n                        placeholder=\"C@ntRaSeñ*a\"\n                       \n                        onChange={this.onChangePassword}></input>\n                    </div>\n                    <div>\n                    <input type=\"submit\" value= \"enviar\"/>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default CrearUsuario;\n\n"]},"metadata":{},"sourceType":"module"}