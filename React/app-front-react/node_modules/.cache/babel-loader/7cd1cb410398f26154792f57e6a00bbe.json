{"ast":null,"code":"var _jsxFileName = \"/home/jota/upgradehub/MERN/app-front-react/src/componentes/crearUsuario.js\";\nimport React, { Component } from 'react';\n/* como hemos importado el componente directamente, no hace falta poner abajo React.Component\n */\n\nclass CrearUsuario extends Component {\n  //this.props es un objetos con datos públicos de React\n  //this.state objeto con datos privados de React, es decir,\n  //el estado interno del componente\n  //las variables miembro de la clase privadas\n  constructor(props) {\n    super(props); //invocamos al constructor del padre pasándole las propiedades públicas\n    //para evitar el problema del this con javascript:\n\n    this.onChangeNombre = this.onChangeNombre.bind(this); //bind vincula algo k en el futuro será this\n    //es decir, k en el futuro cuando se invoque al método, this sea realmente this\n    //this es el objeto instanciado basado en la clase, en estado, cada uno de los componentes\n\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      //creamos un objeto vacío \n      email: 'aaa@aaa.com',\n      password: '1234'\n    };\n  } //Metodo invocado x react cada vez k se cambia el valor del input y se envía un objeto\n  //con la informacion del evento\n\n\n  onChangeNombre(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  onChangePassword(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  render() {\n    return (\n      /* como en react no hay ngmodel para captar los datos\n      lo vinculamos directamente con el objero this.state.email --> */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Formulario crear usuario\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"ejemplo@email.com\",\n        value: this.state.email,\n        onChange: this.onChangeNombre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"password:\"), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"C@ntRaSe\\xF1*a\",\n        value: this.state.password,\n        onChange: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"button\",\n        onClick: \"funcionCallBk()\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default CrearUsuario;","map":{"version":3,"sources":["/home/jota/upgradehub/MERN/app-front-react/src/componentes/crearUsuario.js"],"names":["React","Component","CrearUsuario","constructor","props","onChangeNombre","bind","onChangePassword","state","email","password","evt","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAoC;AAChC;AACA;AACA;AACA;AAEAE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CACE;AAEhB;;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB,CAJc,CAIwC;AACF;AACA;;AACpD,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKE,KAAL,GAAa;AAAO;AAEhBC,MAAAA,KAAK,EAAC,aAFG;AAGTC,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAKH,GApB+B,CAqBhC;AACA;;;AACAL,EAAAA,cAAc,CAACM,GAAD,EAAK;AACf,SAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAACE,GAAG,CAACE,MAAJ,CAAWC;AAAlB,KAAd;AAEH;;AACDP,EAAAA,gBAAgB,CAACI,GAAD,EAAK;AACjB,SAAKC,QAAL,CAAc;AAACF,MAAAA,QAAQ,EAACC,GAAG,CAACE,MAAJ,CAAWC;AAArB,KAAd;AAEH;;AAEDC,EAAAA,MAAM,GAAE;AACJ;AAAS;;AAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,WAAW,EAAC,mBADZ;AAEA,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAFlB;AAGA,QAAA,QAAQ,EAAI,KAAKJ,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACA,QAAA,WAAW,EAAC,gBADZ;AAEA,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,QAFlB;AAGA,QAAA,QAAQ,EAAE,KAAKH,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CARJ,EAeI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAC,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CAFJ;AAFJ;AAuBH;;AAxD+B;;AA4DpC,eAAeL,YAAf","sourcesContent":["import React, { Component } from 'react';\n\n/* como hemos importado el componente directamente, no hace falta poner abajo React.Component\n */\nclass CrearUsuario extends Component{\n    //this.props es un objetos con datos públicos de React\n    //this.state objeto con datos privados de React, es decir,\n    //el estado interno del componente\n    //las variables miembro de la clase privadas\n\n    constructor(props){\n        super(props);   //invocamos al constructor del padre pasándole las propiedades públicas\n\n        //para evitar el problema del this con javascript:\n        this.onChangeNombre = this.onChangeNombre.bind(this); //bind vincula algo k en el futuro será this\n                                                            //es decir, k en el futuro cuando se invoque al método, this sea realmente this\n                                                            //this es el objeto instanciado basado en la clase, en estado, cada uno de los componentes\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {      //creamos un objeto vacío \n           \n            email:'aaa@aaa.com',\n            password:'1234'\n        }\n    }\n    //Metodo invocado x react cada vez k se cambia el valor del input y se envía un objeto\n    //con la informacion del evento\n    onChangeNombre(evt){\n        this.setState({email:evt.target.value\n        });\n    }\n    onChangePassword(evt){\n        this.setState({password:evt.target.value\n        });\n    }\n  \n    render(){\n        return ( /* como en react no hay ngmodel para captar los datos\n            lo vinculamos directamente con el objero this.state.email --> */\n            <div>\n                <h2>Formulario crear usuario</h2>\n                <form>\n                    <div>\n                        <label>Email:</label>\n                        <input type=\"text\" \n                        placeholder=\"ejemplo@email.com\"\n                        value={this.state.email}\n                        onChange = {this.onChangeNombre}></input> \n                    </div>\n                    <div>\n                    <label>password:</label>\n                        <input type=\"password\" \n                        placeholder=\"C@ntRaSeñ*a\"\n                        value={this.state.password}\n                        onChange={this.onChangePassword}></input>\n                    </div>\n                    <input type=\"button\" onClick=\"funcionCallBk()\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default CrearUsuario;\n\n"]},"metadata":{},"sourceType":"module"}